library(cowplot)
p1 <- elk %>% filter(Residency == "SUM") %>%
ggplot(aes(x = Harvest, y = Calves)) + geom_point() + theme_bw()
p2 <- deer %>% filter(Residency == "SUM", Species == "md") %>%
ggplot(aes(x = Harvest, y = Fawns)) + geom_point() + theme_bw()
p3 <- elk %>% filter(Residency == "SUM") %>%
mutate(p.calves = Calves/Harvest) %>%
ggplot(aes(x = Harvest, y = p.calves)) + geom_point() + theme_bw()
p4 <- deer %>% filter(Residency == "SUM", Species == "md") %>%
mutate(p.fawns = Fawns/Harvest) %>%
ggplot(aes(x = Harvest, y = p.fawns)) + geom_point() + theme_bw()
plot_grid(p1, p2, p3, p4, nrow = 2)
head(elk)
elk <- read_csv("elk_count.csv")
head(elk)
unique(elk$MU_state)
library(tidyverse)
setwd("D:/Current Projects/CWD/Modeling")
elk.hunt <- read_csv("mt2020elk.csv")
names(elk.hunt) <- c("Year", "District", "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bulls", "Cows", "Calves", "Bow", "Rifle", "Spike", "Less6", "GE6")
deer.hunt <- read_csv("mt2020deer.csv")
names(deer.hunt) <- c("Year", "District", "Species",  "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bucks", "Does", "Fawns", "Bow", "Rifle", "Less4", "GE4")
# remove the summaries
`%notin%` <- Negate(`%in%`)
elk.hunt <- elk.hunt %>% filter(District %notin% c("Reg_1", "Reg_2", "Reg_3","Reg_4", "Reg_5", "Reg_6", "Reg_7", "State",
"XXX", "1XX", "2XX", "3XX", "4XX", "5XX", "6XX", "7XX"))
deer.hunt <- deer.hunt %>% filter(District %notin% c("Reg_1", "Reg_2", "Reg_3", "Reg_4", "Reg_5", "Reg_6", "Reg_7", "State",
"XXX", "1XX", "2XX", "3XX", "4XX", "5XX", "6XX", "7XX"))
elk <- read_csv("elk_count.csv")
unique(elk.hunt$District)
max(elk$Year)
View(elk)
elk.hunt <- read_csv("mtelkhunt2004_2020elk.csv")
elk.hunt <- read_csv("mtelkhunt2004_2020.csv")
head(elk.hunt)
head(elk)
library(stringr)
elk <- read_csv("elk_count.csv") %>%
mutate(State = str_sub(MU_state, -1),
MU = str_su(MU_state, 1,3))
elk <- read_csv("elk_count.csv") %>%
mutate(State = str_sub(MU_state, -1),
MU = str_sub(MU_state, 1,3))
head(elk)
unique(elk$State)
unique(elk$MU)
elk <- read_csv("elk_count.csv") %>%
mutate(State = str_sub(MU_state, -1),
MU = str_extract(MU_state, "\\d+\\.?\\d*"))
head(elk)
unique(elk$MU_state)
unique(elk$MU)
elk <- read_csv("elk_count.csv") %>%
mutate(State = str_sub(MU_state, -1),
MU = str_extract(MU_state, "\\d+\\.?\\d*")) %>%
filter(State == "m")
head(elkd)
head(elk)
head(elk.hunt)
elk.hunt <- read_csv("mtelkhunt2004_2020.csv")
names(elk.hunt) <- c("Year", "District", "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bulls", "Cows", "Calves", "Bow", "Rifle", "Spike", "Less6", "GE6")
library(tidyverse)
library(stringr)
setwd("D:/Current Projects/CWD/Modeling")
elk.hunt <- read_csv("mtelkhunt2004_2020.csv")
names(elk.hunt) <- c("Year", "District", "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bulls", "Cows", "Calves", "Bow", "Rifle", "Spike", "Less6", "GE6")
deer.hunt <- read_csv("mt2020deer.csv")
names(deer.hunt) <- c("Year", "District", "Species",  "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bucks", "Does", "Fawns", "Bow", "Rifle", "Less4", "GE4")
# remove the summaries
`%notin%` <- Negate(`%in%`)
elk.hunt <- elk.hunt %>% filter(District %notin% c("Reg_1", "Reg_2", "Reg_3","Reg_4", "Reg_5", "Reg_6", "Reg_7", "State",
"XXX", "1XX", "2XX", "3XX", "4XX", "5XX", "6XX", "7XX"))
deer.hunt <- deer.hunt %>% filter(District %notin% c("Reg_1", "Reg_2", "Reg_3", "Reg_4", "Reg_5", "Reg_6", "Reg_7", "State",
"XXX", "1XX", "2XX", "3XX", "4XX", "5XX", "6XX", "7XX"))
elk <- read_csv("elk_count.csv") %>%
mutate(State = str_sub(MU_state, -1),
MU = str_extract(MU_state, "\\d+\\.?\\d*")) %>%
filter(State == "m")
head(elk)
head(elk.hunt)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU"))
head(elk2)
View(elk2)
ggplot(elk2, aes(x = count, y = harvest)) + geom_point() + theme_bw()
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU"))
ggplot(elk2, aes(x = count, y = Harvest)) + geom_point() + theme_bw()
ggplot(elk2, aes(x = count, y = Harvest, color = MU)) + geom_point() + theme_bw()
ggplot(elk2, aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
unique(elk2$District)
library(tidyverse)
library(stringr)
setwd("D:/Current Projects/CWD/Modeling")
elk.hunt <- read_csv("mtelkhunt2004_2020.csv")
names(elk.hunt) <- c("Year", "District", "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bulls", "Cows", "Calves", "Bow", "Rifle", "Spike", "Less6", "GE6")
deer.hunt <- read_csv("mt2020deer.csv")
names(deer.hunt) <- c("Year", "District", "Species",  "Residency", "Hunters", "Days", "HunterDays", "Harvest", "Bucks", "Does", "Fawns", "Bow", "Rifle", "Less4", "GE4")
# remove the summaries
`%notin%` <- Negate(`%in%`)
elk.hunt <- elk.hunt %>% filter(District %notin% c("Reg_1", "Reg_2", "Reg_3","Reg_4", "Reg_5", "Reg_6", "Reg_7", "Reg_X", "State",
"XXX", "1XX", "2XX", "3XX", "4XX", "5XX", "6XX", "7XX"))
deer.hunt <- deer.hunt %>% filter(District %notin% c("Reg_1", "Reg_2", "Reg_3", "Reg_4", "Reg_5", "Reg_6", "Reg_7", "Reg_X", "State",
"XXX", "1XX", "2XX", "3XX", "4XX", "5XX", "6XX", "7XX"))
elk <- read_csv("elk_count.csv") %>%
mutate(State = str_sub(MU_state, -1),
MU = str_extract(MU_state, "\\d+\\.?\\d*")) %>%
filter(State == "m")
library(magrittr)
library(cowplot)
p1 <- elk.hunt %>% filter(Residency == "SUM", Year == 2020) %>%
ggplot(aes(x = Harvest, y = Calves)) + geom_point() + theme_bw()
p2 <- deer.hunt %>% filter(Residency == "SUM", Species == "md") %>%
ggplot(aes(x = Harvest, y = Fawns)) + geom_point() + theme_bw()
p3 <- elk.hunt %>% filter(Residency == "SUM", Year == 2020) %>%
mutate(p.calves = Calves/Harvest) %>%
ggplot(aes(x = Harvest, y = p.calves)) + geom_point() + theme_bw()
p4 <- deer.hunt %>% filter(Residency == "SUM", Species == "md") %>%
mutate(p.fawns = Fawns/Harvest) %>%
ggplot(aes(x = Harvest, y = p.fawns)) + geom_point() + theme_bw()
plot_grid(p1, p2, p3, p4, nrow = 2)
head(elk2)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == T)
head(elk2)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == F)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == F)
head(elk2)
ggplot(elk2, aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == F) %>%
mutate(pc.harvest = Harvest / count,
pc.bulls = Bulls/count,
pc.calves = Calves/count,
pc.cows = Cows/count,
pc.spike = Spike/count)
ggplot(elk2, aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
library(dplyr)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == F) %>%
mutate(pc.harvest = Harvest / count,
pc.bulls = Bulls/count,
pc.calves = Calves/count,
pc.cows = Cows/count,
pc.spike = Spike/count)
p1 <- ggplot(elk2, aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
p2 <- ggplot(elk2, aes(x = count, y = pc.harvest, color = District)) + geom_point() + theme_bw() + theme(legend.position='none')
plot_grid(p1, p2)
hist(elk2$Harvest)
hist(elk2$Harvest, nbins = 40)
hist(elk2$Harvest, nbin = 40)
?hist
hist(elk2$Harvest, breaks = 40)
library(dplyr)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == F) %>%
mutate(pc.harvest = Harvest / count,
pc.bulls = Bulls/count,
pc.calves = Calves/count,
pc.cows = Cows/count,
pc.spike = Spike/count)
# only use areas where the harvest was X or more
p1 <- elk2 %>% filter(Harvest >=50) %>% ggplot(aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
p2 <- elk2 %>% filter(Harvest >=50) %>% ggplot(aes(x = count, y = pc.harvest, color = District)) + geom_point() + theme_bw() + theme(legend.position='none')
plot_grid(p1, p2)
p1 <- elk2 %>% filter(Harvest >=50) %>% ggplot(aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
p2 <- elk2 %>% filter(Harvest >=50) %>% ggplot(aes(x = count, y = pc.harvest, color = District)) + geom_point() + theme_bw() + theme(legend.position='none')
plot_grid(p1, p2)
p1 <- elk2 %>% filter(Harvest >=50) %>% ggplot(aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
p2 <- elk2 %>% filter(Harvest >=50) %>% ggplot(aes(x = count, y = pc.harvest, color = District)) + geom_point() + theme_bw() + theme(legend.position='none')
plot_grid(p1, p2)
library(dplyr)
elk2 <- left_join(elk.hunt, elk, by = c("Year" = "Year", "District" = "MU")) %>%
filter(is.na(count) == F) %>%
mutate(pc.harvest = Harvest / count,
pc.bulls = Bulls/count,
pc.calves = Calves/count,
pc.cows = Cows/count,
pc.spike = Spike/count)
# only use areas where the harvest was X or more and the count is >= Y
p1 <- elk2 %>% filter(Harvest >=50 & count >=500) %>% ggplot(aes(x = count, y = Harvest, color = District)) + geom_point() + theme_bw()
p2 <- elk2 %>% filter(Harvest >=50 & count >=500) %>% ggplot(aes(x = count, y = pc.harvest, color = District)) + geom_point() + theme_bw() + theme(legend.position='none')
plot_grid(p1, p2)
# only use areas where the harvest was X or more and the count is >= Y
elk.sub <- elk2 %>% filter(Harvest >=10 & count >=500)
ggplot(elk.sub, aes(x = pc.cows, y = count, color = Year)) + geom_path() + theme_bw() +
theme(legend.position='none') + facet_grid(~District)
?facet_grid
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_path() + theme_bw() +
theme(legend.position='none') + facet_grid(~District, ncols = 5)
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_path() + theme_bw() +
theme(legend.position='none') + facet_grid(~District, cols = 5)
?facet_wrap
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_path() + theme_bw() +
theme(legend.position='none') + facet_wrap(~District, ncol = 5)
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_path() + theme_bw() +
theme(legend.position='none') + facet_wrap(~District, ncol = 5, scales = "free")
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_path() + theme_bw() +
theme(legend.position='none') + facet_wrap(~District, ncol = 5, scales = "free")
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_point() + theme_bw() +
theme(legend.position='none') + facet_wrap(~District, ncol = 5, scales = "free")
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_point() + theme_bw() +
theme(legend.position='none') + facet_wrap(~District, ncol = 5, scales = "free")
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_point() + theme_bw() +
theme(legend.position='right') + facet_wrap(~District, ncol = 5, scales = "free")
ggplot(elk.sub, aes(x = count, y = pc.cows, color = Year)) + geom_point() + theme_bw() +
theme(legend.position='right') + facet_wrap(~District, ncol = 5)
summary(elk.sub)
elk2 %>% filter(District %notin% c("322", "560")) %>% filter(count >= 1000) %>%
ggplot(aes(x = count, y = pc.cows, color = District)) + geom_point() + theme_bw() +
theme(legend.position='none')
elk2 %>% filter(District %notin% c("322", "560")) %>% filter(count >= 1000) %>%
ggplot(aes(x = count, y = pc.cows, color = District)) + geom_point() + theme_bw() +
theme(legend.position='none')
shiny::runApp('CWD/base_app')
round(R0_NGM(react
runApp('CWD/base_app')
shiny::runApp('CWD/base_app')
out <- cwd_det_model(params)
runApp('CWD/base_app')
out <- simout()
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/det_mod_server.r")
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/det_mod_server.r")
runApp('CWD/base_app')
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/det_mod_server.r")
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/det_mod_server.r")
library(CWDsims)
?cwd_det_model
params <- list(fawn.an.sur = 0.6, juv.an.sur = 0.8, ad.an.f.sur = 0.95,
ad.an.m.sur = 0.9, fawn.repro = 0, juv.repro = 0.6, ad.repro = 1,
hunt.mort.fawn = 0.01, hunt.mort.juv.f = 0.1, hunt.mort.juv.m = 0.1,
hunt.mort.ad.f = 0.1, hunt.mort.ad.m = 0.2, ini.fawn.prev = 0.02,
ini.juv.prev = 0.03, ini.ad.f.prev = 0.04,  ini.ad.m.prev = 0.04,
n.age.cats = 12,  p = 0.43, env.foi = 0,  beta.f = 0.08,  beta.m = 0.08,
theta = 1, n0 = 2000, n.years = 10, rel.risk = 1.0)
out <- cwd_det_model(params)
runApp('CWD/base_app')
shiny::runApp('CWD/base_app')
params <- list(fawn.an.sur = 0.6, juv.an.sur = 0.8, ad.an.f.sur = 0.95,
ad.an.m.sur = 0.9, fawn.repro = 0, juv.repro = 0.6, ad.repro = 1,
hunt.mort.fawn = 0.01, hunt.mort.juv.f = 0.1, hunt.mort.juv.m = 0.1,
hunt.mort.ad.f = 0.1, hunt.mort.ad.m = 0.2, ini.fawn.prev = 0.02,
ini.juv.prev = 0.03, ini.ad.f.prev = 0.04,  ini.ad.m.prev = 0.04,
n.age.cats = 12,  p = 0.43, env.foi = 0,  beta.f = 0.08,  beta.m = 0.08,
theta = 1, n0 = 2000, n.years = 10, rel.risk = 1.0)
out <- cwd_det_model(params)
plot_tots(out$counts)
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
params <- list(fawn.an.sur = 0.6, juv.an.sur = 0.8, ad.an.f.sur = 0.95,
ad.an.m.sur = 0.9, fawn.repro = 0, juv.repro = 0.6, ad.repro = 1,
hunt.mort.fawn = 0.01, hunt.mort.juv.f = 0.1, hunt.mort.juv.m = 0.1,
hunt.mort.ad.f = 0.1, hunt.mort.ad.m = 0.2, ini.fawn.prev = 0.02,
ini.juv.prev = 0.03, ini.ad.f.prev = 0.04,  ini.ad.m.prev = 0.04,
n.age.cats = 12,  p = 0.43, env.foi = 0,  beta.f = 0.08,  beta.m = 0.08,
theta = 1, n0 = 2000, n.years = 10, rel.risk = 1.0)
out <- cwd_det_model(params)
plot_tots(out$counts)
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
params <- list(fawn.an.sur = 0.6, juv.an.sur = 0.8, ad.an.f.sur = 0.95,
ad.an.m.sur = 0.9, fawn.repro = 0, juv.repro = 0.6, ad.repro = 1,
hunt.mort.fawn = 0.01, hunt.mort.juv.f = 0.1, hunt.mort.juv.m = 0.1,
hunt.mort.ad.f = 0.1, hunt.mort.ad.m = 0.2, ini.fawn.prev = 0.02,
ini.juv.prev = 0.03, ini.ad.f.prev = 0.04,  ini.ad.m.prev = 0.04,
n.age.cats = 12,  p = 0.43, env.foi = 0,  beta.f = 0.08,  beta.m = 0.08,
theta = 1, n0 = 2000, n.years = 10, rel.risk = 1.0)
out <- cwd_det_model(params)
plot_tots(out$counts)
params <- list(fawn.an.sur = 0.6, juv.an.sur = 0.8, ad.an.f.sur = 0.95,
ad.an.m.sur = 0.9, fawn.repro = 0, juv.repro = 0.6, ad.repro = 1,
hunt.mort.fawn = 0.01, hunt.mort.juv.f = 0.1, hunt.mort.juv.m = 0.1,
hunt.mort.ad.f = 0.1, hunt.mort.ad.m = 0.2, ini.fawn.prev = 0.02,
ini.juv.prev = 0.03, ini.ad.f.prev = 0.04,  ini.ad.m.prev = 0.04,
n.age.cats = 12,  p = 0.43, env.foi = 0,  beta.f = 0.08,  beta.m = 0.08,
theta = 1, n0 = 2000, n.years = 10, rel.risk = 1.0)
out <- cwd_det_model(params)
plot_tots(out$counts)
if (t%%12 != 2) {
# updating the next month
St.f[, t] <- St.f[, t - 1]
St.m[, t] <- St.m[, t - 1]
It.f[, t, ] <- It.f[, t - 1, ]
It.m[, t, ] <- It.m[, t - 1, ]
}
# Natural mortality
St.f[, t] <- St.f[, t] * Sur.f
St.m[, t] <- St.m[, t] * Sur.m
It.f[, t, ] <- It.f[, t, ] * Sur.f
It.m[, t, ] <- It.m[, t, ] * Sur.m
Dt.f[, t] <- (St.f[, t] + rowSums(It.f[, t, ])) * (1 - Sur.f)
Dt.m[, t] <- (St.m[, t] + rowSums(It.m[, t, ])) * (1 - Sur.m)
# Hunt mortality
if (hunt.mo[t] == 1) {
Iall.f <- rowSums(It.f[, t, ])
Iall.m <- rowSums(It.m[, t, ])
Nt.f <- St.f[, t] + Iall.f
Nt.m <- St.m[, t] + Iall.m
# total hunted
hunted.f <- Nt.f * c(hunt.mort.fawn, hunt.mort.juv.f, rep(hunt.mort.ad.f,
n.age.cats - 2))
hunted.m <- Nt.m * c(hunt.mort.fawn, hunt.mort.juv.m, rep(hunt.mort.ad.m,
n.age.cats - 2))
# tracking the # hunted
Ht.f[, t] <- hunted.f
Ht.m[, t] <- hunted.m
# those hunted in the I class overall based on the total hunted, the
# total that are susceptible/infected and the relative hunting risk of
# S v. I can result in a divide by 0 and NA.  this can also result in
# more hunting of a category than are available.
hunted.i.f <- (rel.risk * Iall.f * hunted.f)/(St.f[, t] + rel.risk *
Iall.f)
hunted.i.m <- (rel.risk * Iall.m * hunted.m)/(St.m[, t] + rel.risk *
Iall.m)
hunted.i.f[which(is.na(hunted.i.f))] <- 0
hunted.i.m[which(is.na(hunted.i.m))] <- 0
# those hunted in the S class
St.f[, t] <- St.f[, t] - (hunted.f - hunted.i.f)
St.m[, t] <- St.m[, t] - (hunted.m - hunted.i.m)
It.f[, t, ] <- It.f[, t, ] * (1 - hunted.i.f/Iall.f)
It.m[, t, ] <- It.m[, t, ] * (1 - hunted.i.m/Iall.m)
}
# Disease mortality stochastic movement of individuals from I1 to I2
# disease induced mortality here by advancing all I's and only a
# proportion of the 10th category remains
f.move <- It.f[, t, ] * p
m.move <- It.m[, t, ] * p
It.f[, t, 1] <- It.f[, t, 1] - f.move[, 1]
It.f[, t, 2:10] <- It.f[, t, 2:10] - f.move[, 2:10] + f.move[, 1:9]
It.m[, t, 1] <- It.m[, t, 1] - m.move[, 1]
It.m[, t, 2:10] <- It.m[, t, 2:10] - m.move[, 2:10] + m.move[, 1:9]
# store info on those that die directly from disease
CWDt.f[, t] <- f.move[, 10]
CWDt.m[, t] <- m.move[, 10]
# Direct transmission considering all I's are equal
Iall <- sum(It.f[, t, ] + It.m[, t, ])
Nall <- sum(St.f[, t] + St.m[, t]) + Iall
cases.f <- St.f[, t] * (1 - exp(-(beta.f * (Iall/Nall^theta))))
cases.m <- St.m[, t] * (1 - exp(-(beta.m * (Iall/Nall^theta))))
St.f[, t] <- St.f[, t] - cases.f
St.m[, t] <- St.m[, t] - cases.m
It.f[, t, 1] <- It.f[, t, 1] + cases.f
It.m[, t, 1] <- It.m[, t, 1] + cases.m
# Environmental transmission happens last
envcases.f <- St.f[, t] * env.foi
envcases.m <- St.m[, t] * env.foi
St.f[, t] <- St.f[, t] - envcases.f
St.m[, t] <- St.m[, t] - envcases.m
It.f[, t, 1] <- It.f[, t, 1] + envcases.f
It.m[, t, 1] <- It.m[, t, 1] + envcases.m
####### POPULATION MODEL############
for (t in 2:(n.years * 12)) {
# on birthdays add in recruits and age everyone by one year births
# happen in June, model starts in May
if (t%%12 == 2) {
# aging the last age category remains in place and doesn't die
St.f[2:(n.age.cats - 1), t] <- St.f[1:(n.age.cats - 2), t - 1]
St.f[n.age.cats, t] <- St.f[n.age.cats, t - 1] + St.f[(n.age.cats - 1), t - 1]
St.m[2:(n.age.cats - 1), t] <- St.m[1:(n.age.cats - 2), t - 1]
St.m[n.age.cats, t] <- St.m[n.age.cats, t - 1] + St.m[(n.age.cats - 1), t - 1]
It.f[2:(n.age.cats - 1), t, ] <- It.f[1:(n.age.cats - 2), t - 1, ]
It.f[n.age.cats, t, ] <- It.f[n.age.cats, t - 1, ] +
It.f[(n.age.cats - 1), t - 1, ]
It.m[2:(n.age.cats - 1), t, ] <- It.m[1:(n.age.cats - 2), t - 1, ]
It.m[n.age.cats, t, ] <- It.m[n.age.cats, t - 1, ] +
It.m[(n.age.cats - 1), t - 1, ]
# reproduction
I_juv <- sum(It.f[2, t - 1, ])
I_adults <- sum(It.f[3:n.age.cats, t - 1, ])
St.f[1, t] <- ((St.f[2, t - 1] + I_juv) * juv.repro +
(sum(St.f[3:n.age.cats, t - 1]) + I_adults) * ad.repro) * 0.5
St.m[1, t] <- ((St.f[2, t - 1] + I_juv) * juv.repro +
(sum(St.f[3:n.age.cats, t - 1]) + I_adults) * ad.repro) * 0.5
}
browser()
if (t%%12 != 2) {
# updating the next month
St.f[, t] <- St.f[, t - 1]
St.m[, t] <- St.m[, t - 1]
It.f[, t, ] <- It.f[, t - 1, ]
It.m[, t, ] <- It.m[, t - 1, ]
}
# Natural mortality
St.f[, t] <- St.f[, t] * Sur.f
St.m[, t] <- St.m[, t] * Sur.m
It.f[, t, ] <- It.f[, t, ] * Sur.f
It.m[, t, ] <- It.m[, t, ] * Sur.m
Dt.f[, t] <- (St.f[, t] + rowSums(It.f[, t, ])) * (1 - Sur.f)
Dt.m[, t] <- (St.m[, t] + rowSums(It.m[, t, ])) * (1 - Sur.m)
# Hunt mortality
if (hunt.mo[t] == 1) {
Iall.f <- rowSums(It.f[, t, ])
Iall.m <- rowSums(It.m[, t, ])
Nt.f <- St.f[, t] + Iall.f
Nt.m <- St.m[, t] + Iall.m
# total hunted
hunted.f <- Nt.f * c(hunt.mort.fawn, hunt.mort.juv.f, rep(hunt.mort.ad.f,
n.age.cats - 2))
hunted.m <- Nt.m * c(hunt.mort.fawn, hunt.mort.juv.m, rep(hunt.mort.ad.m,
n.age.cats - 2))
# tracking the # hunted
Ht.f[, t] <- hunted.f
Ht.m[, t] <- hunted.m
# those hunted in the I class overall based on the total hunted, the
# total that are susceptible/infected and the relative hunting risk of
# S v. I can result in a divide by 0 and NA.  this can also result in
# more hunting of a category than are available.
hunted.i.f <- (rel.risk * Iall.f * hunted.f)/(St.f[, t] + rel.risk *
Iall.f)
hunted.i.m <- (rel.risk * Iall.m * hunted.m)/(St.m[, t] + rel.risk *
Iall.m)
hunted.i.f[which(is.na(hunted.i.f))] <- 0
hunted.i.m[which(is.na(hunted.i.m))] <- 0
# those hunted in the S class
St.f[, t] <- St.f[, t] - (hunted.f - hunted.i.f)
St.m[, t] <- St.m[, t] - (hunted.m - hunted.i.m)
It.f[, t, ] <- It.f[, t, ] * (1 - hunted.i.f/Iall.f)
It.m[, t, ] <- It.m[, t, ] * (1 - hunted.i.m/Iall.m)
}
# Disease mortality stochastic movement of individuals from I1 to I2
# disease induced mortality here by advancing all I's and only a
# proportion of the 10th category remains
f.move <- It.f[, t, ] * p
m.move <- It.m[, t, ] * p
It.f[, t, 1] <- It.f[, t, 1] - f.move[, 1]
It.f[, t, 2:10] <- It.f[, t, 2:10] - f.move[, 2:10] + f.move[, 1:9]
It.m[, t, 1] <- It.m[, t, 1] - m.move[, 1]
It.m[, t, 2:10] <- It.m[, t, 2:10] - m.move[, 2:10] + m.move[, 1:9]
# store info on those that die directly from disease
CWDt.f[, t] <- f.move[, 10]
CWDt.m[, t] <- m.move[, 10]
# Direct transmission considering all I's are equal
Iall <- sum(It.f[, t, ] + It.m[, t, ])
Nall <- sum(St.f[, t] + St.m[, t]) + Iall
cases.f <- St.f[, t] * (1 - exp(-(beta.f * (Iall/Nall^theta))))
cases.m <- St.m[, t] * (1 - exp(-(beta.m * (Iall/Nall^theta))))
St.f[, t] <- St.f[, t] - cases.f
St.m[, t] <- St.m[, t] - cases.m
It.f[, t, 1] <- It.f[, t, 1] + cases.f
It.m[, t, 1] <- It.m[, t, 1] + cases.m
# Environmental transmission happens last
envcases.f <- St.f[, t] * env.foi
envcases.m <- St.m[, t] * env.foi
St.f[, t] <- St.f[, t] - envcases.f
St.m[, t] <- St.m[, t] - envcases.m
It.f[, t, 1] <- It.f[, t, 1] + envcases.f
It.m[, t, 1] <- It.m[, t, 1] + envcases.m
}
counts <- list(St.f = St.f, St.m = St.m, I1t.f = It.f[, , 1],
I1t.m = It.m[, , 1], I2t.f = It.f[, , 2],
I2t.m = It.m[, , 2], I3t.f = It.f[, , 3],
I3t.m = It.m[, , 3], I4t.f = It.f[, , 4],
I4t.m = It.m[, , 4], I5t.f = It.f[, , 5],
I5t.m = It.m[, , 5], I6t.f = It.f[, , 6],
I6t.m = It.m[, , 6], I7t.f = It.f[, , 7],
I7t.m = It.m[, , 7], I8t.f = It.f[, , 8],
I8t.m = It.m[, , 8], I9t.f = It.f[, , 9],
I9t.m = It.m[, , 9], I10t.f = It.f[, , 10],
I10t.m = It.m[, , 10])
deaths <- list(Ht.f = Ht.f, Ht.m = Ht.m, Dt.f = Dt.f, Dt.m = Dt.m,
CWDt.f = CWDt.f, CWDt.m = CWDt.m)
# convert the output to long form
counts.long <- melt(counts) %>%
rename(age = Var1, month = Var2, population = value, category = L1) %>%
mutate(year = (month - 1)/12, sex = as.factor(str_sub(category, -1)),
disease = "no")
head(melt(counts))
counts.long <- melt(counts) %>%
rename(age = Var1, month = Var2, population = value, category = L1)
counts.long <- melt(counts) %>%
rename(age = Var1, month = Var2, population = value, category = L1)
counts
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
params <- list(fawn.an.sur = 0.6, juv.an.sur = 0.8, ad.an.f.sur = 0.95,
ad.an.m.sur = 0.9, fawn.repro = 0, juv.repro = 0.6, ad.repro = 1,
hunt.mort.fawn = 0.01, hunt.mort.juv.f = 0.1, hunt.mort.juv.m = 0.1,
hunt.mort.ad.f = 0.1, hunt.mort.ad.m = 0.2, ini.fawn.prev = 0.02,
ini.juv.prev = 0.03, ini.ad.f.prev = 0.04,  ini.ad.m.prev = 0.04,
n.age.cats = 12,  p = 0.43, env.foi = 0,  beta.f = 0.08,  beta.m = 0.08,
theta = 1, n0 = 2000, n.years = 10, rel.risk = 1.0)
out <- cwd_det_model(params)
plot_tots(out$counts)
head(deaths)
head(counts)
counts.long <- melt(counts) %>%
rename(age = Var1, month = Var2, population = value, category = L1)
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
source("D:/Current Projects/CWD/Modeling/CWD_shiny/CWD/base_app/cwd_det_model_fxn.r")
deaths.long <- melt(deaths) %>%
rename(age = Var1, month = Var2, population = value, category = L1) %>%
mutate(year = (month - 1)/12, sex = as.factor(str_sub(category, -1)))
?rename
?plyr::rename
?dplyr::rename
iris <- as_tibble(iris)
iris
iris <- as_tibble(iris) # so it prints a little nicer
rename(iris, petal_length = Petal.Length)
iris
iris <- as_tibble(iris) # so it prints a little nicer
plyr::rename(iris, petal_length = Petal.Length)
library(dplyr)
iris <- as_tibble(iris) # so it prints a little nicer
plyr::rename(iris, petal_length = Petal.Length)
iris <- as_tibble(iris) # so it prints a little nicer
plyr::rename(iris, petal_length = Petal.Length)
iris <- as_tibble(iris) # so it prints a little nicer
rename(iris, petal_length = Petal.Length)
iris <- as_tibble(iris) # so it prints a little nicer
dplyr::rename(iris, petal_length = Petal.Length)
iris
runApp('CWD/base_app')
